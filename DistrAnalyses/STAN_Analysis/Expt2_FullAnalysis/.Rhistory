fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(ads,threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 8000 & RT.ms >= -1000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Adult",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age) + xlim(c(-2,4))
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,
factor1 = tt$N_Early,
factor2 = tt$N_Pred,
#                     factor3 = tt$N_AgeFive,
factor4 = tt$N_AgeThree,
factor5 = tt$N_E_P_Interact,
#                     factor6 = tt$N_Early_AgeFive_Interact,
factor6a = tt$N_Early_AgeThree_Interact,
#                     factor7 = tt$N_Pred_AgeFive_Interact,
factor7a = tt$N_Pred_AgeThree_Interact,
#                     factor8 = tt$N_Early_Pred_AgeFive_Interact,
factor8a = tt$N_Early_Pred_AgeThree_Interact,
factor9 = scale(tt$CharacterLength.ms)[,1],
N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 2, iter = 50)
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(ads,fives,threes)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Participant, sep = "")
tt<- subset(tt, RTms <= 8000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RTms
tt$N_Early <- ifelse(tt$Early.Late == "Early",0,1)
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(ads,fives,threes)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Participant, sep = "")
tt<- subset(tt, RT.ms <= 8000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RTms
tt$N_Early <- ifelse(tt$Early.Late == "Early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
summary(tt)
_P_Interact <- tt$N_Pred * tt$N_Early
tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/sd(tt$rt)
ggplot(tt,aes(x=rt,..density..,col=Age))+ geom_freqpoly(alpha=1,lwd =1.5)+xlab("Response Time (ms)")
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt <- rbind(ads,fives,threes)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Participant, sep = "")
tt<- subset(tt, RT.ms <= 8000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RTms
tt$N_Early <- ifelse(tt$Early.Late == "Early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/sd(tt$rt)
ggplot(tt,aes(x=rt,..density..,col=Age))+ geom_freqpoly(alpha=1,lwd =1.5)+xlab("Response Time (ms)")
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "Early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/sd(tt$rt)
ggplot(tt,aes(x=rt,..density..,col=Age))+ geom_freqpoly(alpha=1,lwd =1.5)+xlab("Response Time (ms)")
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,factor1 = tt$N_Early,factor2 = tt$N_Pred,factor3 = tt$N_AgeFive,factor4 = tt$N_AgeThree, factor5 = tt$N_M_P_Interact,
factor6 = tt$N_Early_AgeFive_Interact, factor6a = tt$N_Early_AgeThree_Interact, factor7 = tt$N_Pred_AgeFive_Interact, factor7a = tt$N_Pred_AgeThree_Interact,
factor8 = tt$N_Early_Pred_AgeFive_Interact, factor8a = tt$N_Early_Pred_AgeThree_Interact, N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_exp2.stan",
data=stanDat_full,
chains = 4, iter = 40, control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
stanDat_full <- list(rt = tt$rt,factor1 = tt$N_Early,factor2 = tt$N_Pred,factor3 = tt$N_AgeFive,factor4 = tt$N_AgeThree, factor5 = tt$N_E_P_Interact,
factor6 = tt$N_Early_AgeFive_Interact, factor6a = tt$N_Early_AgeThree_Interact, factor7 = tt$N_Pred_AgeFive_Interact, factor7a = tt$N_Pred_AgeThree_Interact,
factor8 = tt$N_Early_Pred_AgeFive_Interact, factor8a = tt$N_Early_Pred_AgeThree_Interact, N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_exp2.stan",
data=stanDat_full,
chains = 4, iter = 40, control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(ads,fives,threes)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Participant, sep = "")
tt<- subset(tt, RT.ms <= 8000 & RT.ms > -500)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "Early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/sd(tt$rt)
ggplot(tt,aes(x=rt,..density..,col=Age))+ geom_freqpoly(alpha=1,lwd =1.5)+xlab("Response Time (ms)")
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_exp2.stan",
data=stanDat_full,
chains = 4, iter = 40, control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
#ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 8000 & RT.ms >= -1000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Five",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age) + xlim(c(-2,4))
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,
factor1 = tt$N_Early,
factor2 = tt$N_Pred,
# factor3 = tt$N_AgeFive,
factor4 = tt$N_AgeThree,
factor5 = tt$N_E_P_Interact,
# factor6 = tt$N_Early_AgeFive_Interact,
factor6a = tt$N_Early_AgeThree_Interact,
# factor7 = tt$N_Pred_AgeFive_Interact,
factor7a = tt$N_Pred_AgeThree_Interact,
# factor8 = tt$N_Early_Pred_AgeFive_Interact,
factor8a = tt$N_Early_Pred_AgeThree_Interact,
N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 1, iter = 50)
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 1, iter = 50)
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 150)
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 50,  control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t","u"), probs = c(0.025,0.5,0.975))
print(eg_stan_exp, pars = c("u"), probs = c(0.025,0.5,0.975))
print(eg_stan_exp, pars = c("u_t"), probs = c(0.025,0.5,0.975))
print(eg_stan_exp, pars = c("u_s"), probs = c(0.025,0.5,0.975))
pairs(eg_stan_exp, pars = c("u_s"), probs = c(0.025,0.5,0.975))
pairs(eg_stan_exp, pars = c("u_s"))
pairs(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t","u"))
?pairs
?rstan::pairs
?rstan:pairs
par("mar")
par(mar=c(1,1,1,1))
pairs(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t","u"))
pairs(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t","u"))
pairs(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t","u"))
pairs(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"))
pairs(eg_stan_exp, pars = c("beta0","beta"))
tt<- subset(tt, RT.ms <= 6000 & RT.ms >= -500)
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 50,  control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
#ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 8000 & RT.ms >= -1000)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Five",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age) + xlim(c(-2,4))
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
#ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 6000 & RT.ms >= -500)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Five",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age) + xlim(c(-2,4))
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,
factor1 = tt$N_Early,
factor2 = tt$N_Pred,
# factor3 = tt$N_AgeFive,
factor4 = tt$N_AgeThree,
factor5 = tt$N_E_P_Interact,
# factor6 = tt$N_Early_AgeFive_Interact,
factor6a = tt$N_Early_AgeThree_Interact,
# factor7 = tt$N_Pred_AgeFive_Interact,
factor7a = tt$N_Pred_AgeThree_Interact,
# factor8 = tt$N_Early_Pred_AgeFive_Interact,
factor8a = tt$N_Early_Pred_AgeThree_Interact,
N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 50,  control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
#ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 7000 & RT.ms >= -500)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Five",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age) + xlim(c(-2,4))
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,
factor1 = tt$N_Early,
factor2 = tt$N_Pred,
# factor3 = tt$N_AgeFive,
factor4 = tt$N_AgeThree,
factor5 = tt$N_E_P_Interact,
# factor6 = tt$N_Early_AgeFive_Interact,
factor6a = tt$N_Early_AgeThree_Interact,
# factor7 = tt$N_Pred_AgeFive_Interact,
factor7a = tt$N_Pred_AgeThree_Interact,
# factor8 = tt$N_Early_Pred_AgeFive_Interact,
factor8a = tt$N_Early_Pred_AgeThree_Interact,
N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 50,  control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
library(retimes)
library(rstan)
library(ggplot2)
library(retimes)
library(rstan)
library(ggplot2)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(123)
#ads <- read.csv("exp2_adults.csv")
fives <- read.csv("exp2_fives.csv")
threes <- read.csv("exp2_threes.csv")
#ads$Age <- "Adult"
fives$Age <- "Five"
threes$Age <- "Three"
tt <- rbind(threes,fives)
tt$Age <- as.factor(tt$Age)
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
tt<- subset(tt, RT.ms <= 6500 & RT.ms >= -500)
# I should really try with a lower cutoff. 4s? Done now; doesn't improve fit.
tt$rt <- tt$RT.ms
tt$N_Early <- ifelse(tt$Early.Late == "early",0,1)
tt$N_Pred <- ifelse(tt$Pred == "Pred",0,1)
#tt$N_AgeFive <- model.matrix(~tt$Age)[,2]
#tt$N_AgeThree <- model.matrix(~tt$Age)[,3]
tt$N_AgeThree <- ifelse(tt$Age == "Five",0,1)#model.matrix(~tt$Age)[,2]
tt$N_E_P_Interact <- tt$N_Pred * tt$N_Early
#tt$N_Early_AgeFive_Interact <-  tt$N_Early * tt$N_AgeFive
tt$N_Early_AgeThree_Interact <- tt$N_Early * tt$N_AgeThree
#tt$N_Pred_AgeFive_Interact <- tt$N_Pred * tt$N_AgeFive
tt$N_Pred_AgeThree_Interact <- tt$N_Pred * tt$N_AgeThree
#tt$N_Early_Pred_AgeFive_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeFive
tt$N_Early_Pred_AgeThree_Interact <- tt$N_Early * tt$N_Pred * tt$N_AgeThree
# tt$rt_scale <- (tt$rt - mean(tt$rt,na.rm = T))/sd(tt$rt, na.rm = T)
tt$rt <- (tt$rt - mean(tt$rt))/(sd(tt$rt))
tt$scale_character_length <- (tt$CharacterLength.ms - mean(tt$CharacterLength.ms))/(sd(tt$CharacterLength.ms))
ggplot(tt,aes(x=rt,..density..,col=Pred))+ geom_freqpoly(alpha=1,lwd =1.5, bins = 50)+xlab("Response Time (ms)")+facet_wrap(Early.Late ~ Age)
# For some reason, model won't converge with RTs above zero?
#tt$rt <- tt$rt + abs(min(tt$rt))
# Fit Ex-Gaussian using ML (retimes library)
eg_ml <- timefit(tt$rt)
print(eg_ml)
stanDat_full <- list(rt = tt$rt,
factor1 = tt$N_Early,
factor2 = tt$N_Pred,
# factor3 = tt$N_AgeFive,
factor4 = tt$N_AgeThree,
factor5 = tt$N_E_P_Interact,
# factor6 = tt$N_Early_AgeFive_Interact,
factor6a = tt$N_Early_AgeThree_Interact,
# factor7 = tt$N_Pred_AgeFive_Interact,
factor7a = tt$N_Pred_AgeThree_Interact,
# factor8 = tt$N_Early_Pred_AgeFive_Interact,
factor8a = tt$N_Early_Pred_AgeThree_Interact,
N = nrow(tt), J = nlevels(as.factor(tt$Subject)), Subj = as.integer(as.factor(tt$Subject)))
eg_stan_exp <- stan(file="fixEf_Age_and_Conds_transf_expt2.stan",
data=stanDat_full,
chains = 3, iter = 50,  control = list(adapt_delta = 0.88))
print(eg_stan_exp, pars = c("beta0","beta","beta_s0","beta_s","beta_t0","beta_t"), probs = c(0.025,0.5,0.975))
